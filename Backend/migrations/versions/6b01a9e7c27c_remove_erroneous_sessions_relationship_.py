"""Remove erroneous sessions relationship from Slot and ParkingSession

Revision ID: 6b01a9e7c27c
Revises: 56e3caba59d0
Create Date: 2025-07-04 06:11:10.154101

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b01a9e7c27c'
down_revision = '56e3caba59d0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('parking_sessions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('duration_hrs', sa.Numeric(), nullable=True))

    with op.batch_alter_table('parkinglots_details', schema=None) as batch_op:
        batch_op.add_column(sa.Column('landmark', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('latitude', sa.Numeric(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Numeric(), nullable=True))
        batch_op.add_column(sa.Column('physical_appearance', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('parking_ownership', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('parking_surface', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('has_cctv', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('has_boom_barrier', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('ticket_generated', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('entry_exit_gates', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('weekly_off', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('parking_timing', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('vehicle_types', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('car_capacity', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('available_car_slots', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('two_wheeler_capacity', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('available_two_wheeler_slots', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('parking_type', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('payment_modes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('car_parking_charge', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('two_wheeler_parking_charge', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('allows_prepaid_passes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('provides_valet_services', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('value_added_services', sa.Text(), nullable=True))
        batch_op.alter_column('parking_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=True)
        batch_op.alter_column('city',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Text(),
               nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=True)
        batch_op.drop_column('country')
        batch_op.drop_column('created_at')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('total_rows')
        batch_op.drop_column('total_floors')
        batch_op.drop_column('opening_time')
        batch_op.drop_column('total_slots')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('zip_code')
        batch_op.drop_column('closing_time')
        batch_op.drop_column('state')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('parkinglots_details', schema=None) as batch_op:
        batch_op.add_column(sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('closing_time', postgresql.TIME(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('zip_code', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_slots', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('opening_time', postgresql.TIME(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_floors', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_rows', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('country', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.alter_column('address',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('city',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('parking_name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.drop_column('value_added_services')
        batch_op.drop_column('provides_valet_services')
        batch_op.drop_column('allows_prepaid_passes')
        batch_op.drop_column('two_wheeler_parking_charge')
        batch_op.drop_column('car_parking_charge')
        batch_op.drop_column('payment_modes')
        batch_op.drop_column('parking_type')
        batch_op.drop_column('available_two_wheeler_slots')
        batch_op.drop_column('two_wheeler_capacity')
        batch_op.drop_column('available_car_slots')
        batch_op.drop_column('car_capacity')
        batch_op.drop_column('vehicle_types')
        batch_op.drop_column('parking_timing')
        batch_op.drop_column('weekly_off')
        batch_op.drop_column('entry_exit_gates')
        batch_op.drop_column('ticket_generated')
        batch_op.drop_column('has_boom_barrier')
        batch_op.drop_column('has_cctv')
        batch_op.drop_column('parking_surface')
        batch_op.drop_column('parking_ownership')
        batch_op.drop_column('physical_appearance')
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')
        batch_op.drop_column('landmark')

    with op.batch_alter_table('parking_sessions', schema=None) as batch_op:
        batch_op.drop_column('duration_hrs')

    # ### end Alembic commands ###
